/* ASSIGNMENT NO.20 CHANGING VALUES THROUGH VIEWS */
________________________________________________________________________________________
1) WHICH OF THESE VIEWS ARE UPDATEABLE (WILL ALLOW DML OPERATIONS)?

#1 CREATE VIEW DAILYORDERS
AS SELECT DISTINCT CNUM, SNUM, ONUM, ODATE FROM ORDERS;

#2 CREATE VIEW CUSTOTALS
AS SELECT CNAME, SUM (AMT) SUM_AMT FROM ORDERS, CUSTOMERS
WHERE ORDERS.CNUM=CUSTOMERS.CNUM
GROUP BY CNAME;

#3 CREATE VIEW THIRDORDERS
AS SELECT * FROM DAILYORDERS WHERE
ODATE=’1990-10-03’;

#4 CREATE VIEW NULLCITIES
AS SELECT SNUM, SNAME, CITY
FROM SALESPEOPLE
WHERE CITY IS NULL
OR SNAME BETWEEN ‘A’ AND ‘MZ’;

ANSWER- STATEMENT 1 AND 4;

__________________________________________________________________________________________
2) CREATE A VIEW OF THE SALESPEOPLE TABLE CALLED COMMISSIONS. THIS VIEW WILL INCLUDE
ONLY THE SNUM AND COMM FIELDS. THROUGH THIS VIEW, SOMEONE COULD ENTER OR CHANGE
COMMISSIONS, BUT ONLY TO VALUES BETWEEN .10 AND .20.

ANSWER:

CREATE VIEW COMMISSION AS SELECT SNUM, COMM FROM SALESPEOPLE
WHERE COMM BETWEEN .10 AND .20;

__________________________________________________________________________________________
3) SOME SQL IMPLEMENTATIONS HAVE A BUILT-IN CONSTANT REPRESENTING THE CURRENT DATE,
SOMETIMES CALLED “CURDATE” OR “SYSDATE”. THE WORD SYSDATE CAN
THEREFORE BE USED IN A SQL STATEMENT, AND BE REPLACED BY THE CURRENT DATE WHEN THE
VALUE IS ACCESSED BY COMMANDS SUCH AS SELECT OR INSERT. WE WILL USE A VIEW OF THE
ORDERS TABLE CALLED ENTRYORDERS TO INSERT ROWS INTO THE ORDERS TABLE. CREATE THE
ORDERS TABLE, SO THAT SYSDATE IS AUTOMATICALLY INSERTED FOR ODATE IF NO VALUE IS
GIVEN. THEN CREATE THE ENTRYORDERS VIEW SO THAT NO VALUES CAN BE GIVEN. 

ANSWER:

 ALTER TABLE ORDERS MODIFY ODATE DATE DEFAULT CURRENT_TIMESTAMP ; 
 CREATE VIEW ENTRYORDERS AS (SELECT * FROM ORDERS);
 SELECT * FROM ENTRYORDERS;
_________________________________________________________________________________________
